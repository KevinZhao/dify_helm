name: Release Charts

on:
  push:
    branches:
      - main

# 这里添加权限设置以允许GitHub Actions写入仓库和部署Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        
      # Update Helm dependencies (but only download those marked as embedded)
      # 由于已移除依赖声明，不再需要更新依赖
      - name: Clean Environment
        run: |
          # 删除Chart.lock文件
          echo "删除Chart.lock文件..."
          rm -f Chart.lock || true
          
          # 确保charts目录存在但为空
          echo "确保charts目录干净..."
          mkdir -p charts
          rm -rf charts/* || true
          
          echo "环境已准备好打包..."

      - name: Package Helm Chart
        run: |
          helm package .
          
      - name: Update index.yaml
        run: |
          helm repo index --url https://kevinzhao.github.io/dify_helm .
      
      - name: Confirm file existence before deployment
        run: |
          echo "检查chart包是否存在..."
          ls -la dify-*.tgz || echo "主Chart包不存在!"
          echo "检查依赖包是否存在..."
          ls -la charts/*.tgz || echo "依赖Chart包不存在或目录为空!"
          
      - name: Create deployment folder
        run: |
          mkdir -p deployment
          cp index.yaml deployment/
          cp dify-*.tgz deployment/ || echo "警告: 未找到主Chart包"
          # 确保依赖chart目录存在并复制依赖chart包
          if [ -d "charts" ] && [ "$(ls -A charts)" ]; then
            echo "复制依赖chart包..."
            mkdir -p deployment/charts
            cp -r charts/*.tgz deployment/charts/
          else
            echo "charts目录不存在或为空，创建空目录..."
            mkdir -p deployment/charts
          fi
          
      - name: Verify deployment directory content
        run: |
          echo "部署目录内容:"
          find deployment -type f | sort

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: deployment
          branch: gh-pages
          clean: true
          token: ${{ secrets.GITHUB_TOKEN }}
